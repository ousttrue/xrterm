{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/common/services/Services.ts","webpack:///./src/common/EventEmitter.ts","webpack:///./src/common/Lifecycle.ts","webpack:///./src/common/buffer/Constants.ts","webpack:///./src/browser/services/Services.ts","webpack:///./src/common/buffer/CellData.ts","webpack:///./src/common/buffer/AttributeData.ts","webpack:///./src/browser/Lifecycle.ts","webpack:///./src/common/input/TextDecoder.ts","webpack:///./src/browser/renderer/atlas/Constants.ts","webpack:///./src/common/Platform.ts","webpack:///./src/common/data/EscapeSequences.ts","webpack:///./src/browser/renderer/BaseRenderLayer.ts","webpack:///./src/common/services/ServiceRegistry.ts","webpack:///./src/common/TypedArrayUtils.ts","webpack:///./src/common/buffer/BufferLine.ts","webpack:///./src/browser/LocalizableStrings.ts","webpack:///./src/common/data/Charsets.ts","webpack:///./src/common/CharWidth.ts","webpack:///./src/common/parser/Params.ts","webpack:///./src/common/parser/OscParser.ts","webpack:///./src/common/parser/Constants.ts","webpack:///./src/common/parser/DcsParser.ts","webpack:///./src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///./src/browser/ColorManager.ts","webpack:///./src/browser/renderer/RendererUtils.ts","webpack:///./src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///./src/browser/input/Mouse.ts","webpack:///./src/browser/RenderDebouncer.ts","webpack:///./src/browser/ScreenDprMonitor.ts","webpack:///./src/common/Clone.ts","webpack:///./src/public/Terminal.ts","webpack:///./src/Terminal.ts","webpack:///./src/browser/input/CompositionHelper.ts","webpack:///./src/browser/Viewport.ts","webpack:///./src/browser/Clipboard.ts","webpack:///./src/InputHandler.ts","webpack:///./src/common/parser/EscapeSequenceParser.ts","webpack:///./src/browser/renderer/Renderer.ts","webpack:///./src/browser/renderer/TextRenderLayer.ts","webpack:///./src/browser/renderer/GridCache.ts","webpack:///./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///./src/browser/Color.ts","webpack:///./src/browser/renderer/atlas/LRUMap.ts","webpack:///./src/browser/renderer/SelectionRenderLayer.ts","webpack:///./src/browser/renderer/CursorRenderLayer.ts","webpack:///./src/browser/renderer/LinkRenderLayer.ts","webpack:///./src/browser/Linkifier.ts","webpack:///./src/browser/services/SelectionService.ts","webpack:///./src/browser/selection/SelectionModel.ts","webpack:///./src/browser/input/MoveToCell.ts","webpack:///./src/browser/services/SoundService.ts","webpack:///./src/browser/MouseZoneManager.ts","webpack:///./src/AccessibilityManager.ts","webpack:///./src/browser/renderer/dom/DomRenderer.ts","webpack:///./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///./src/common/input/Keyboard.ts","webpack:///./src/WindowsMode.ts","webpack:///./src/browser/services/RenderService.ts","webpack:///./src/common/services/OptionsService.ts","webpack:///./src/browser/services/CharSizeService.ts","webpack:///./src/common/services/BufferService.ts","webpack:///./src/common/buffer/BufferSet.ts","webpack:///./src/common/buffer/Buffer.ts","webpack:///./src/common/CircularList.ts","webpack:///./src/common/buffer/BufferReflow.ts","webpack:///./src/common/buffer/Marker.ts","webpack:///./src/browser/services/MouseService.ts","webpack:///./src/common/services/CoreService.ts","webpack:///./src/common/services/LogService.ts","webpack:///./src/common/services/DirtyRowService.ts","webpack:///./src/common/services/InstantiationService.ts","webpack:///./src/common/services/CoreMouseService.ts","webpack:///./src/common/input/WriteBuffer.ts","webpack:///./src/browser/services/CoreBrowserService.ts","webpack:///./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IBufferService","createDecorator","ICoreMouseService","ICoreService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","_listeners","_disposed","this","_event","listener","push","dispose","length","splice","fire","data","queue","undefined","EventEmitter","_disposables","_isDisposed","forEach","register","unregister","index","indexOf","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","content","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","node","type","handler","useCapture","addEventListener","removeEventListener","codePoint","String","fromCharCode","start","end","result","codepoint","_interim","clear","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","_drawUncachedChars","drawBoldTextInBrightColors","draw","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","BaseRenderLayer","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","arguments","Error","set","fillFallback","array","b","constructor","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","keys","parseInt","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","max","bisearch","MAX_SUBPARAMS","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","Array","k","addSubParam","addParam","newParams","toArray","res","slice","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","j","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","rgba","colorCode","DEFAULT_FOREGROUND","fromCss","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","g","toCss","toRgba","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","selectionOpaque","blend","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","ceil","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","_core","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","callback","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","e","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","parentNode","_parent","body","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","_userScrolling","InputHandler","linkifier","Linkifier","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","alt","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","debug","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","setgLevel","setgCharset","wasModifierKeyOnlyEvent","charCode","which","bell","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","setTimeout","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","inputHandler","userScrolling","force","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","concat","pt","cursorStyle","cursorBlink","_terminal","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","len","chWidth","curAttr","bufferRow","markDirty","ch","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","savedCols","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","map","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_linkifier","_onRequestRefreshRows","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","color","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","toPaddedHex","fgR","fgG","fgB","bgR","bgG","bgB","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","terminal","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","onRequestRefreshRows","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","screenKeys","useFlowControl","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","temp","_entries","entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","DOWN","UP","MOVE","WHEEL","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","activeElement","hasFocus","_addons","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,I,gFC1ErD,YAEa,EAAAC,eAAiB,EAAAC,gBAAgC,iBAejD,EAAAC,kBAAoB,EAAAD,gBAAmC,oBA+BvD,EAAAE,aAAe,EAAAF,gBAA8B,eAmC7C,EAAAG,iBAAmB,EAAAH,gBAAkC,mBAsDrD,EAAAI,sBAAwB,EAAAJ,gBAAuC,wBAe/D,EAAAK,YAAc,EAAAL,gBAA6B,cAU3C,EAAAM,gBAAkB,EAAAN,gBAAiC,mB,8ECrJhE,8BACU,KAAAO,WAA6B,GAE7B,KAAAC,WAAqB,EAwC/B,OAtCE,sBAAW,oBAAK,C,IAAhB,sBAmBE,OAlBKC,KAAKC,SACRD,KAAKC,OAAS,SAACC,GAcb,OAbA,EAAKJ,WAAWK,KAAKD,GACF,CACjBE,QAAS,WACP,IAAK,EAAKL,UACR,IAAK,IAAI7C,EAAI,EAAGA,EAAI,EAAK4C,WAAWO,OAAQnD,IAC1C,GAAI,EAAK4C,WAAW5C,KAAOgD,EAEzB,YADA,EAAKJ,WAAWQ,OAAOpD,EAAG,OAUjC8C,KAAKC,Q,gCAGP,YAAAM,KAAP,SAAYC,GAEV,IADA,IAAMC,EAAwB,GACrBvD,EAAI,EAAGA,EAAI8C,KAAKF,WAAWO,OAAQnD,IAC1CuD,EAAMN,KAAKH,KAAKF,WAAW5C,IAE7B,IAASA,EAAI,EAAGA,EAAIuD,EAAMJ,OAAQnD,IAChCuD,EAAMvD,GAAGO,UAAKiD,EAAWF,IAItB,YAAAJ,QAAP,WACMJ,KAAKF,aACPE,KAAKF,WAAWO,OAAS,GAE3BL,KAAKD,WAAY,GAErB,EA3CA,GAAa,EAAAY,gB,8ECVb,iBAIE,aAHU,KAAAC,aAA8B,GAC9B,KAAAC,aAAuB,EAiCnC,OAzBS,YAAAT,QAAP,WACEJ,KAAKa,aAAc,EACnBb,KAAKY,aAAaE,SAAQ,SAAAlD,GAAK,OAAAA,EAAEwC,aACjCJ,KAAKY,aAAaP,OAAS,GAOtB,YAAAU,SAAP,SAAuCnD,GACrCoC,KAAKY,aAAaT,KAAKvC,IAQlB,YAAAoD,WAAP,SAAyCpD,GACvC,IAAMqD,EAAQjB,KAAKY,aAAaM,QAAQtD,IACzB,IAAXqD,GACFjB,KAAKY,aAAaN,OAAOW,EAAO,IAGtC,EAnCA,GAAsB,EAAAE,c,8ECNT,EAAAC,cAAgB,IAChB,EAAAC,aAAe,IAAa,EAAAD,eAAiB,EAE7C,EAAAE,qBAAuB,EACvB,EAAAC,qBAAuB,EACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,EAOvB,EAAAC,eAAiB,GACjB,EAAAC,gBAAkB,EAClB,EAAAC,eAAiB,EAOjB,EAAAC,qBAAuB,IACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,I,8ECpBpC,YAGa,EAAAC,iBAAmB,EAAAzC,gBAAkC,mBAarD,EAAA0C,oBAAsB,EAAA1C,gBAAqC,sBAO3D,EAAA2C,cAAgB,EAAA3C,gBAA+B,gBAQ/C,EAAA4C,eAAiB,EAAA5C,gBAAgC,iBA4BjD,EAAA6C,kBAAoB,EAAA7C,gBAAmC,oBA4BvD,EAAA8C,cAAgB,EAAA9C,gBAA+B,iB,8ZC1F5D,WACA,OAMA,yE,OAQS,EAAA+C,QAAkB,EAClB,EAAAC,GAAa,EACb,EAAAC,GAAa,EACb,EAAAC,aAAuB,G,EAoEhC,OA/E8B,OAEd,EAAAC,aAAd,SAA2BnE,GACzB,IAAMoE,EAAM,IAAIC,EAEhB,OADAD,EAAIE,gBAAgBtE,GACboE,GAQF,YAAAG,WAAP,WACE,OAAsB,QAAf9C,KAAKsC,SAGP,YAAAS,SAAP,WACE,OAAO/C,KAAKsC,SAAW,IAGlB,YAAAU,SAAP,WACE,OAAmB,QAAfhD,KAAKsC,QACAtC,KAAKyC,aAEK,QAAfzC,KAAKsC,QACA,EAAAW,oBAAmC,QAAfjD,KAAKsC,SAE3B,IAQF,YAAAY,QAAP,WACE,OAAQlD,KAAK8C,aACT9C,KAAKyC,aAAaU,WAAWnD,KAAKyC,aAAapC,OAAS,GACzC,QAAfL,KAAKsC,SAGJ,YAAAO,gBAAP,SAAuBtE,GACrByB,KAAKuC,GAAKhE,EAAM,EAAA+C,sBAChBtB,KAAKwC,GAAK,EACV,IAAIY,GAAW,EAEf,GAAI7E,EAAM,EAAAgD,sBAAsBlB,OAAS,EACvC+C,GAAW,OAER,GAA2C,IAAvC7E,EAAM,EAAAgD,sBAAsBlB,OAAc,CACjD,IAAMgD,EAAO9E,EAAM,EAAAgD,sBAAsB4B,WAAW,GAGpD,GAAI,OAAUE,GAAQA,GAAQ,MAAQ,CACpC,IAAMC,EAAS/E,EAAM,EAAAgD,sBAAsB4B,WAAW,GAClD,OAAUG,GAAUA,GAAU,MAChCtD,KAAKsC,QAA6B,MAAjBe,EAAO,OAAkBC,EAAS,MAAS,MAAY/E,EAAM,EAAAiD,wBAA0B,GAGxG4B,GAAW,OAIbA,GAAW,OAIbpD,KAAKsC,QAAU/D,EAAM,EAAAgD,sBAAsB4B,WAAW,GAAM5E,EAAM,EAAAiD,wBAA0B,GAE1F4B,IACFpD,KAAKyC,aAAelE,EAAM,EAAAgD,sBAC1BvB,KAAKsC,QAAU,QAA4B/D,EAAM,EAAAiD,wBAA0B,KAIxE,YAAA+B,cAAP,WACE,MAAO,CAACvD,KAAKuC,GAAIvC,KAAKgD,WAAYhD,KAAK+C,WAAY/C,KAAKkD,YAE5D,EA/EA,CALA,KAK8BM,eAAjB,EAAAZ,Y,8ECLb,8BAoBS,KAAAL,GAAa,EACb,KAAAC,GAAa,EAsCtB,OA1DS,EAAAiB,WAAP,SAAkBlF,GAChB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,IAGG,EAAAmF,aAAP,SAAoBnF,GAClB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,IAGhG,YAAAoF,MAAP,WACE,IAAMC,EAAS,IAAIJ,EAGnB,OAFAI,EAAOrB,GAAKvC,KAAKuC,GACjBqB,EAAOpB,GAAKxC,KAAKwC,GACVoB,GAQF,YAAAC,UAAP,WAA+B,OAAiB,SAAV7D,KAAKuC,IACpC,YAAAuB,OAAP,WAA+B,OAAiB,UAAV9D,KAAKuC,IACpC,YAAAwB,YAAP,WAA+B,OAAiB,UAAV/D,KAAKuC,IACpC,YAAAyB,QAAP,WAA+B,OAAiB,UAAVhE,KAAKuC,IACpC,YAAA0B,YAAP,WAA+B,OAAiB,WAAVjE,KAAKuC,IACpC,YAAA2B,SAAP,WAA+B,OAAiB,SAAVlE,KAAKwC,IACpC,YAAA2B,MAAP,WAA+B,OAAiB,UAAVnE,KAAKwC,IAGpC,YAAA4B,eAAP,WAAkC,OAAiB,SAAVpE,KAAKuC,IACvC,YAAA8B,eAAP,WAAkC,OAAiB,SAAVrE,KAAKwC,IACvC,YAAA8B,QAAP,WAAkC,OAA0C,WAAxB,SAAVtE,KAAKuC,KACxC,YAAAgC,QAAP,WAAkC,OAA0C,WAAxB,SAAVvE,KAAKwC,KACxC,YAAAgC,YAAP,WAAkC,OAA0C,WAAxB,SAAVxE,KAAKuC,KAAqF,WAAxB,SAAVvC,KAAKuC,KAChG,YAAAkC,YAAP,WAAkC,OAA0C,WAAxB,SAAVzE,KAAKwC,KAAqF,WAAxB,SAAVxC,KAAKwC,KAChG,YAAAkC,YAAP,WAAkC,OAA0C,IAAxB,SAAV1E,KAAKuC,KACxC,YAAAoC,YAAP,WAAkC,OAA0C,IAAxB,SAAV3E,KAAKwC,KAGxC,YAAAoC,WAAP,WACE,OAAkB,SAAV5E,KAAKuC,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVvC,KAAKuC,GACtC,KAAK,SAAqB,OAAiB,SAAVvC,KAAKuC,GACtC,QAA0B,OAAQ,IAG/B,YAAAsC,WAAP,WACE,OAAkB,SAAV7E,KAAKwC,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVxC,KAAKwC,GACtC,KAAK,SAAqB,OAAiB,SAAVxC,KAAKwC,GACtC,QAA0B,OAAQ,IAGxC,EA3DA,GAAa,EAAAgB,iB,8ECIb,oCACEsB,EACAC,EACAC,EACAC,GAGA,OADAH,EAAKI,iBAAiBH,EAAMC,EAASC,GAC9B,CACL7E,QAAS,WACF4E,GAILF,EAAKK,oBAAoBJ,EAAMC,EAASC,O,8ECb9C,+BAAoCG,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNC,OAAOC,aAAiC,OAAnBF,GAAa,KAAgBC,OAAOC,aAAcF,EAAY,KAAS,QAE9FC,OAAOC,aAAaF,IAQ7B,yBAA8B5E,EAAmB+E,EAAmBC,QAAnB,IAAAD,MAAA,QAAmB,IAAAC,MAAchF,EAAKH,QAErF,IADA,IAAIoF,EAAS,GACJvI,EAAIqI,EAAOrI,EAAIsI,IAAOtI,EAAG,CAChC,IAAIwI,EAAYlF,EAAKtD,GACjBwI,EAAY,OAMdA,GAAa,MACbD,GAAUJ,OAAOC,aAAiC,OAAnBI,GAAa,KAAgBL,OAAOC,aAAcI,EAAY,KAAS,QAEtGD,GAAUJ,OAAOC,aAAaI,GAGlC,OAAOD,GAOT,8BACU,KAAAE,SAAmB,EA8D7B,OAzDS,YAAAC,MAAP,WACE5F,KAAK2F,SAAW,GAWlB,YAAAE,OAAA,SAAOC,EAAeC,GACpB,IAAM1F,EAASyF,EAAMzF,OAErB,IAAKA,EACH,OAAO,EAGT,IAAI2F,EAAO,EACPC,EAAW,EAGXjG,KAAK2F,WAEH,QADErC,EAASwC,EAAM3C,WAAW8C,OACR3C,GAAU,MAChCyC,EAAOC,KAAqC,MAA1BhG,KAAK2F,SAAW,OAAkBrC,EAAS,MAAS,OAGtEyC,EAAOC,KAAUhG,KAAK2F,SACtBI,EAAOC,KAAU1C,GAEnBtD,KAAK2F,SAAW,GAGlB,IAAK,IAAIzI,EAAI+I,EAAU/I,EAAImD,IAAUnD,EAAG,CACtC,IAAMmG,EAAOyC,EAAM3C,WAAWjG,GAE9B,GAAI,OAAUmG,GAAQA,GAAQ,MAA9B,CACE,KAAMnG,GAAKmD,EAET,OADAL,KAAK2F,SAAWtC,EACT2C,EAET,IAAM1C,EACF,QADEA,EAASwC,EAAM3C,WAAWjG,KACRoG,GAAU,MAChCyC,EAAOC,KAA4B,MAAjB3C,EAAO,OAAkBC,EAAS,MAAS,OAG7DyC,EAAOC,KAAU3C,EACjB0C,EAAOC,KAAU1C,QAIrByC,EAAOC,KAAU3C,EAEnB,OAAO2C,GAEX,EA/DA,GAAa,EAAAE,gBAoEb,8BACS,KAAAC,QAAsB,IAAIC,WAAW,GAgO9C,OA3NS,YAAAR,MAAP,WACE5F,KAAKmG,QAAQE,KAAK,IAWpB,YAAAR,OAAA,SAAOC,EAAmBC,GACxB,IAAM1F,EAASyF,EAAMzF,OAErB,IAAKA,EACH,OAAO,EAGT,IACIiG,EACAC,EACAC,EACAC,EAJAT,EAAO,EAKPN,EAAY,EACZO,EAAW,EAGf,GAAIjG,KAAKmG,QAAQ,GAAI,CACnB,IAAIO,GAAiB,EACjBC,EAAK3G,KAAKmG,QAAQ,GACtBQ,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAG3E,IAFA,IAAIC,EAAM,EACNC,OAAG,GACCA,EAA4B,GAAtB7G,KAAKmG,UAAUS,KAAgBA,EAAM,GACjDD,IAAO,EACPA,GAAME,EAKR,IAFA,IAAM9B,EAAsC,MAAV,IAAlB/E,KAAKmG,QAAQ,IAAwB,EAAmC,MAAV,IAAlBnG,KAAKmG,QAAQ,IAAwB,EAAI,EAC/FW,EAAU/B,EAAO6B,EAChBX,EAAWa,GAAS,CACzB,GAAIb,GAAY5F,EACd,OAAO,EAGT,GAAqB,MAAV,KADXwG,EAAMf,EAAMG,OACe,CAEzBA,IACAS,GAAiB,EACjB,MAGA1G,KAAKmG,QAAQS,KAASC,EACtBF,IAAO,EACPA,GAAY,GAANE,EAGLH,IAEU,IAAT3B,EACE4B,EAAK,IAEPV,IAEAF,EAAOC,KAAUW,EAED,IAAT5B,EACL4B,EAAK,MAAWA,GAAM,OAAUA,GAAM,QAGxCZ,EAAOC,KAAUW,GAGfA,EAAK,OAAYA,EAAK,UAGxBZ,EAAOC,KAAUW,IAIvB3G,KAAKmG,QAAQE,KAAK,GAMpB,IAFA,IAAMU,EAAW1G,EAAS,EACtBnD,EAAI+I,EACD/I,EAAImD,GAAQ,CAejB,SAAOnD,EAAI6J,IACiB,KAApBT,EAAQR,EAAM5I,KACU,KAAxBqJ,EAAQT,EAAM5I,EAAI,KACM,KAAxBsJ,EAAQV,EAAM5I,EAAI,KACM,KAAxBuJ,EAAQX,EAAM5I,EAAI,MAExB6I,EAAOC,KAAUM,EACjBP,EAAOC,KAAUO,EACjBR,EAAOC,KAAUQ,EACjBT,EAAOC,KAAUS,EACjBvJ,GAAK,EAOP,IAHAoJ,EAAQR,EAAM5I,MAGF,IACV6I,EAAOC,KAAUM,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAIpJ,GAAKmD,EAEP,OADAL,KAAKmG,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM5I,OACe,CAE3BA,IACA,SAGF,IADAwI,GAAqB,GAARY,IAAiB,EAAa,GAARC,GACnB,IAAM,CAEpBrJ,IACA,SAEF6I,EAAOC,KAAUN,OAGZ,GAAuB,MAAV,IAARY,GAAwB,CAClC,GAAIpJ,GAAKmD,EAEP,OADAL,KAAKmG,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM5I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKmD,EAGP,OAFAL,KAAKmG,QAAQ,GAAKG,EAClBtG,KAAKmG,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAM5I,OACe,CAE3BA,IACA,SAGF,IADAwI,GAAqB,GAARY,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GAC1C,MAAWd,GAAa,OAAUA,GAAa,MAE7D,SAEFK,EAAOC,KAAUN,OAGZ,GAAuB,MAAV,IAARY,GAAwB,CAClC,GAAIpJ,GAAKmD,EAEP,OADAL,KAAKmG,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM5I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKmD,EAGP,OAFAL,KAAKmG,QAAQ,GAAKG,EAClBtG,KAAKmG,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAM5I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKmD,EAIP,OAHAL,KAAKmG,QAAQ,GAAKG,EAClBtG,KAAKmG,QAAQ,GAAKI,EAClBvG,KAAKmG,QAAQ,GAAKK,EACXR,EAGT,GAAuB,MAAV,KADbS,EAAQX,EAAM5I,OACe,CAE3BA,IACA,SAGF,IADAwI,GAAqB,EAARY,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GACjE,OAAYf,EAAY,QAEtC,SAEFK,EAAOC,KAAUN,GAKrB,OAAOM,GAEX,EAjOA,GAAa,EAAAgB,e,8EC/GA,EAAAC,uBAAyB,IACzB,EAAAC,YAAc,GAEd,EAAAC,wBAA0B,G,8ECOvC,IAAMC,EAA+B,oBAAdC,UACjBC,EAAY,EAAW,OAASD,UAAUC,UAC1CC,EAAW,EAAW,OAASF,UAAUE,SAmB/C,SAASC,EAASC,EAAYC,GAC5B,OAAOD,EAAIvG,QAAQwG,IAAO,EAlBf,EAAAC,aAAeL,EAAUpG,QAAQ,WACjC,EAAA0G,SAAW,iCAAiCC,KAAKP,GAKjD,EAAAQ,MAAQN,EAAS,CAAC,YAAa,WAAY,SAAU,UAAWD,GAChE,EAAAQ,OAAsB,SAAbR,EACT,EAAAS,SAAwB,WAAbT,EACX,EAAAU,UAAYT,EAAS,CAAC,UAAW,QAAS,QAAS,SAAUD,GAC7D,EAAAW,QAAUX,EAASrG,QAAQ,UAAY,G,8ECpBpD,SAAiBiH,GAEF,EAAAC,IAAM,KAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IApErB,CAAiB,EAAAlC,KAAA,EAAAA,GAAE,KA2EnB,SAAiBmC,GAEF,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,KAAO,IAEP,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAhErB,CAAiB,EAAAhC,KAAA,EAAAA,GAAE,M,8EC7EnB,WAEA,OAEA,QACA,OAIA,QAEA,aAyBE,WACUiC,EACRC,EACAC,EACQC,EACEC,EACFC,EACWC,EACAC,GAPX,KAAAP,aAGA,KAAAG,SACE,KAAAC,UACF,KAAAC,cACW,KAAAC,iBACA,KAAAC,kBA9Bb,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAOzB,KAAAC,wBAA4C,CAClDC,MAAO,GACPjK,KAAM,EACNb,GAAI,EACJD,GAAI,EACJgL,MAAM,EACNC,KAAK,EACLC,QAAQ,GAaRzN,KAAK0N,QAAUC,SAASC,cAAc,UACtC5N,KAAK0N,QAAQG,UAAUC,IAAI,SAAStB,EAAE,UACtCxM,KAAK0N,QAAQK,MAAMtB,OAASA,EAAOuB,WACnChO,KAAKiO,cACLjO,KAAKuM,WAAW2B,YAAYlO,KAAK0N,SAoUrC,OAjUS,YAAAtN,QAAP,W,MACEJ,KAAKuM,WAAW4B,YAAYnO,KAAK0N,SAClB,QAAf,EAAA1N,KAAKoO,kBAAU,SAAEhO,WAGX,YAAA6N,YAAR,WACEjO,KAAKqO,KAAO,EAAAC,aAAatO,KAAK0N,QAAQa,WAAW,KAAM,CAACC,MAAOxO,KAAK0M,UAE/D1M,KAAK0M,QACR1M,KAAKyO,aAIF,YAAAC,iBAAP,aACO,YAAAC,OAAP,aACO,YAAAC,QAAP,aACO,YAAAC,aAAP,aACO,YAAAC,cAAP,SAAqBC,EAAkBC,KAChC,YAAAC,mBAAP,SAA0B1J,EAAyBC,EAAuB0J,QAAA,IAAAA,OAAA,IAEnE,YAAAC,UAAP,SAAiBC,GACfpP,KAAKqP,kBAAkBD,IAGf,YAAAE,iBAAV,SAA2Bd,GAEzB,GAAIA,IAAUxO,KAAK0M,OAAnB,CAKA,IAAM6C,EAAYvP,KAAK0N,QACvB1N,KAAK0M,OAAS8B,EAEdxO,KAAK0N,QAA6B1N,KAAK0N,QAAQ8B,YAC/CxP,KAAKiO,cACLjO,KAAKuM,WAAWkD,aAAazP,KAAK0N,QAAS6B,GAG3CvP,KAAKqP,kBAAkBrP,KAAK2M,SAC5B3M,KAAK8O,cAAc,EAAG9O,KAAK6M,eAAe6C,KAAO,KAO3C,YAAAL,kBAAR,SAA0BD,GACpBpP,KAAK+M,kBAAoB,GAAK/M,KAAKgN,mBAAqB,IAG5DhN,KAAKoO,WAAa,EAAAuB,iBAAiB3P,KAAK8M,gBAAgB8C,QAAS5P,KAAK4M,YAAawC,EAAUpP,KAAK+M,iBAAkB/M,KAAKgN,mBACzHhN,KAAKoO,WAAWyB,WAGX,YAAAC,OAAP,SAActC,GACZxN,KAAKiN,iBAAmBO,EAAIuC,gBAC5B/P,KAAKkN,kBAAoBM,EAAIwC,iBAC7BhQ,KAAK+M,iBAAmBS,EAAIyC,gBAC5BjQ,KAAKgN,kBAAoBQ,EAAI0C,iBAC7BlQ,KAAKmN,gBAAkBK,EAAI2C,eAC3BnQ,KAAKoN,eAAiBI,EAAI4C,cAC1BpQ,KAAK0N,QAAQ2C,MAAQ7C,EAAI8C,kBACzBtQ,KAAK0N,QAAQ6C,OAAS/C,EAAIgD,mBAC1BxQ,KAAK0N,QAAQK,MAAMsC,MAAW7C,EAAIiD,YAAW,KAC7CzQ,KAAK0N,QAAQK,MAAMwC,OAAY/C,EAAIkD,aAAY,KAG1C1Q,KAAK0M,QACR1M,KAAKyO,YAGPzO,KAAKqP,kBAAkBrP,KAAK2M,UAYpB,YAAAgE,WAAV,SAAqBC,EAAWC,EAAWR,EAAeE,GACxDvQ,KAAKqO,KAAKyC,SACNF,EAAI5Q,KAAKiN,iBACT4D,EAAI7Q,KAAKkN,kBACTmD,EAAQrQ,KAAKiN,iBACbsD,EAASvQ,KAAKkN,oBASV,YAAA6D,uBAAV,SAAiCH,EAAWC,EAAWR,QAAA,IAAAA,MAAA,GACrDrQ,KAAKqO,KAAKyC,SACNF,EAAI5Q,KAAKiN,kBACR4D,EAAI,GAAK7Q,KAAKkN,kBAAoB/P,OAAO6T,iBAAmB,EAC7DX,EAAQrQ,KAAKiN,iBACb9P,OAAO6T,mBASH,YAAAC,oBAAV,SAA8BL,EAAWC,GACvC7Q,KAAKqO,KAAKyC,SACNF,EAAI5Q,KAAKiN,iBACT4D,EAAI7Q,KAAKkN,kBACT/P,OAAO6T,iBACPhR,KAAKkN,oBASD,YAAAgE,kBAAV,SAA4BN,EAAWC,EAAWR,EAAeE,GAC/DvQ,KAAKqO,KAAK8C,UAAYhU,OAAO6T,iBAC7BhR,KAAKqO,KAAK+C,WACNR,EAAI5Q,KAAKiN,iBAAmB9P,OAAO6T,iBAAmB,EACtDH,EAAI7Q,KAAKkN,kBAAqB/P,OAAO6T,iBAAmB,EACxDX,EAAQrQ,KAAKiN,iBAAmB9P,OAAO6T,iBACtCT,EAASvQ,KAAKkN,kBAAqB/P,OAAO6T,mBAMvC,YAAAvC,UAAV,WACMzO,KAAK0M,OACP1M,KAAKqO,KAAKgD,UAAU,EAAG,EAAGrR,KAAK0N,QAAQ2C,MAAOrQ,KAAK0N,QAAQ6C,SAE3DvQ,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ4E,WAAWC,IAC9CxR,KAAKqO,KAAKyC,SAAS,EAAG,EAAG9Q,KAAK0N,QAAQ2C,MAAOrQ,KAAK0N,QAAQ6C,UAWpD,YAAAkB,YAAV,SAAsBb,EAAWC,EAAWR,EAAeE,GACrDvQ,KAAK0M,OACP1M,KAAKqO,KAAKgD,UACNT,EAAI5Q,KAAKiN,iBACT4D,EAAI7Q,KAAKkN,kBACTmD,EAAQrQ,KAAKiN,iBACbsD,EAASvQ,KAAKkN,oBAElBlN,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ4E,WAAWC,IAC9CxR,KAAKqO,KAAKyC,SACNF,EAAI5Q,KAAKiN,iBACT4D,EAAI7Q,KAAKkN,kBACTmD,EAAQrQ,KAAKiN,iBACbsD,EAASvQ,KAAKkN,qBAaZ,YAAAwE,mBAAV,SAA6BC,EAAgBf,EAAWC,GACtD7Q,KAAKqO,KAAKuD,KAAO5R,KAAK6R,UAAS,GAAO,GACtC7R,KAAKqO,KAAKyD,aAAe,SACzB9R,KAAK+R,SAASlB,GACd7Q,KAAKqO,KAAK2D,SACNL,EAAK3O,WACL4N,EAAI5Q,KAAKiN,iBAAmBjN,KAAKmN,gBACjC0D,EAAI7Q,KAAKkN,kBAAoBlN,KAAKoN,eAAiBpN,KAAKgN,kBAAoB,IAgBxE,YAAAiF,WAAV,SAAqBN,EAAiBf,EAAWC,GAW/C,IAAItO,EACAC,EANAmP,EAAKrN,WAAaqN,EAAKpN,UACzBvE,KAAKkS,mBAAmBP,EAAMf,EAAGC,IAM/Bc,EAAK9N,aACPtB,EAAMoP,EAAKhN,cAAiB,EAAAsC,uBAAyB0K,EAAK9M,aAC1DrC,EAAMmP,EAAKjN,cAAiB,EAAAuC,uBAAyB0K,EAAK/M,eAE1DpC,EAAMmP,EAAKhN,cAAiB,EAAAvD,cAAgBuQ,EAAK9M,aACjDtC,EAAMoP,EAAKjN,cAAiB,EAAAtD,cAAgBuQ,EAAK/M,cAKnDrC,GAF0BvC,KAAK8M,gBAAgB8C,QAAQuC,4BAA8BR,EAAK7N,UAAYvB,EAAK,GAAKA,IAAO,EAAA0E,uBAE7F,EAAI,EAC9BjH,KAAKqN,wBAAwBC,MAAQqE,EAAK3O,YAAc,EAAAnB,qBACxD7B,KAAKqN,wBAAwBhK,KAAOsO,EAAKzO,WAAa,EAAAnB,qBACtD/B,KAAKqN,wBAAwB7K,GAAKA,EAClCxC,KAAKqN,wBAAwB9K,GAAKA,EAClCvC,KAAKqN,wBAAwBE,OAASoE,EAAK7N,SAC3C9D,KAAKqN,wBAAwBG,MAAQmE,EAAKxN,QAC1CnE,KAAKqN,wBAAwBI,SAAWkE,EAAKzN,WACxBlE,KAAKoO,YAAcpO,KAAKoO,WAAWgE,KACtDpS,KAAKqO,KACLrO,KAAKqN,wBACLuD,EAAI5Q,KAAKiN,iBAAmBjN,KAAKmN,gBACjC0D,EAAI7Q,KAAKkN,kBAAoBlN,KAAKoN,iBAIlCpN,KAAKkS,mBAAmBP,EAAMf,EAAGC,KAc7B,YAAAqB,mBAAR,SAA2BP,EAAiBf,EAAWC,GAKrD,GAJA7Q,KAAKqO,KAAKgE,OACVrS,KAAKqO,KAAKuD,KAAO5R,KAAK6R,WAAWF,EAAK7N,WAAY6N,EAAKzN,YACvDlE,KAAKqO,KAAKyD,aAAe,SAErBH,EAAK9N,YACH8N,EAAKhN,cACP3E,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ4E,WAAWC,IACrCG,EAAKpN,UACdvE,KAAKqO,KAAKiD,UAAY,OAAO,EAAA9N,cAAcC,WAAWkO,EAAK9M,cAAcyN,KAAK,KAAI,IAElFtS,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ4F,KAAKZ,EAAK9M,cAAc2M,SAG7D,GAAIG,EAAKjN,cACP1E,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ6F,WAAWhB,SACzC,GAAIG,EAAKrN,UACdtE,KAAKqO,KAAKiD,UAAY,OAAO,EAAA9N,cAAcC,WAAWkO,EAAK/M,cAAc0N,KAAK,KAAI,QAC7E,CACL,IAAI/P,EAAKoP,EAAK/M,aACV5E,KAAK8M,gBAAgB8C,QAAQuC,4BAA8BR,EAAK7N,UAAYvB,EAAK,IACnFA,GAAM,GAERvC,KAAKqO,KAAKiD,UAAYtR,KAAK2M,QAAQ4F,KAAKhQ,GAAIiP,IAIhDxR,KAAK+R,SAASlB,GAGVc,EAAKxN,UACPnE,KAAKqO,KAAKoE,YAAc,EAAAvL,aAG1BlH,KAAKqO,KAAK2D,SACNL,EAAK3O,WACL4N,EAAI5Q,KAAKiN,iBAAmBjN,KAAKmN,gBACjC0D,EAAI7Q,KAAKkN,kBAAoBlN,KAAKoN,eAAiBpN,KAAKgN,kBAAoB,GAChFhN,KAAKqO,KAAKqE,WAOJ,YAAAX,SAAR,SAAiBlB,GACf7Q,KAAKqO,KAAKsE,YACV3S,KAAKqO,KAAKuE,KACN,EACA/B,EAAI7Q,KAAKkN,kBACTlN,KAAK6M,eAAegG,KAAO7S,KAAKiN,iBAChCjN,KAAKkN,mBACTlN,KAAKqO,KAAKyE,QAOF,YAAAjB,SAAV,SAAmB/N,EAAiBI,GAIlC,OAFkBA,EAAW,SAAW,IAErB,KAHAJ,EAAS9D,KAAK8M,gBAAgB8C,QAAQmD,eAAiB/S,KAAK8M,gBAAgB8C,QAAQoD,YAGtE,IAAIhT,KAAK8M,gBAAgB8C,QAAQqD,SAAW9V,OAAO6T,iBAAgB,MAAMhR,KAAK8M,gBAAgB8C,QAAQsD,YAE3I,EA3WA,GAAsB,EAAAC,mB,8ECLtB,IAAMC,EAAY,YACZC,EAAkB,kBA2BxB,SAASC,EAAuB9G,EAAczG,EAAkB9E,GACzD8E,EAAeqN,KAAerN,EAChCA,EAAesN,GAAiBlT,KAAK,CAAEqM,GAAE,EAAEvL,MAAK,KAEhD8E,EAAesN,GAAmB,CAAC,CAAE7G,GAAE,EAAEvL,MAAK,IAC9C8E,EAAeqN,GAAarN,GA9BpB,EAAAwN,gBAAwD,IAAIC,IAEzE,kCAAuCC,GACrC,OAAOA,EAAKJ,IAAoB,IAGlC,2BAAmC7G,GACjC,GAAI,EAAA+G,gBAAgBG,IAAIlH,GACtB,OAAO,EAAA+G,gBAAgBpV,IAAIqO,GAG7B,IAAMmH,EAAiB,SAAU5N,EAAkBlH,EAAaoC,GAC9D,GAAyB,IAArB2S,UAAUvT,OACZ,MAAM,IAAIwT,MAAM,oEAGlBP,EAAuBK,EAAW5N,EAAQ9E,IAM5C,OAHA0S,EAAU3F,SAAW,WAAM,OAAAxB,GAE3B,EAAA+G,gBAAgBO,IAAItH,EAAImH,GACjBA,I,6BChBT,SAAgBI,EAAmCC,EAAUzV,EAAegH,EAAmBC,GAK7F,QAL0E,IAAAD,MAAA,QAAmB,IAAAC,MAAcwO,EAAM3T,QAK7GkF,GAASyO,EAAM3T,OACjB,OAAO2T,EAETzO,GAASyO,EAAM3T,OAASkF,GAASyO,EAAM3T,OAErCmF,EADEA,GAAOwO,EAAM3T,OACT2T,EAAM3T,QAEL2T,EAAM3T,OAASmF,GAAOwO,EAAM3T,OAErC,IAAK,IAAInD,EAAIqI,EAAOrI,EAAIsI,IAAOtI,EAC7B8W,EAAM9W,GAAKqB,EAEb,OAAOyV,E,iDAzBT,gBAA2CA,EAAUzV,EAAegH,EAAgBC,GAElF,OAAIwO,EAAM3N,KACD2N,EAAM3N,KAAK9H,EAAOgH,EAAOC,GAE3BuO,EAAaC,EAAOzV,EAAOgH,EAAOC,IAG3C,iBAwBA,kBAA6CvI,EAAMgX,GACjD,IAAMxO,EAAS,IAAKxI,EAAEiX,YAAoBjX,EAAEoD,OAAS4T,EAAE5T,QAGvD,OAFAoF,EAAOqO,IAAI7W,GACXwI,EAAOqO,IAAIG,EAAGhX,EAAEoD,QACToF,I,8EC5CT,WACA,OACA,OACA,OAYM0O,EAAY,EAgBL,EAAAC,kBAAoBpW,OAAOqW,OAAO,IAAI,EAAA7Q,eAiBnD,iBAKE,WAAYqP,EAAcyB,EAAiCC,QAAA,IAAAA,OAAA,QAAAA,YAHjD,KAAAC,UAAuC,GAI/CxU,KAAKyU,MAAQ,IAAIC,YAAY7B,EAAOsB,GAEpC,IADA,IAAMxC,EAAO2C,GAAgB,EAAA1R,SAASF,aAAa,CAAC,EAAG,EAAAhB,eAAgB,EAAAC,gBAAiB,EAAAC,iBAC/E1E,EAAI,EAAGA,EAAI2V,IAAQ3V,EAC1B8C,KAAK2U,QAAQzX,EAAGyU,GAElB3R,KAAKK,OAASwS,EAuUlB,OAhUS,YAAA1U,IAAP,SAAW8C,GACT,IAAMqB,EAAUtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GACzCxN,EAAe,QAAVrE,EACX,MAAO,CACLtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GACpB,QAAV7R,EACGtC,KAAKwU,UAAUvT,GACf,EAAO,EAAAgC,oBAAoB0D,GAAM,GACrCrE,GAAW,GACA,QAAVA,EACGtC,KAAKwU,UAAUvT,GAAOkC,WAAWnD,KAAKwU,UAAUvT,GAAOZ,OAAS,GAChEsG,IAQD,YAAAmN,IAAP,SAAW7S,EAAe1C,GACxByB,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAW5V,EAAM,EAAA+C,sBAC5C/C,EAAM,EAAAgD,sBAAsBlB,OAAS,GACvCL,KAAKwU,UAAUvT,GAAS1C,EAAM,GAC9ByB,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAwB,QAARlT,EAAoC1C,EAAM,EAAAiD,wBAA0B,IAEnHxB,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAgB5V,EAAM,EAAAgD,sBAAsB4B,WAAW,GAAM5E,EAAM,EAAAiD,wBAA0B,IAQzH,YAAAuB,SAAP,SAAgB9B,GACd,OAAOjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAAiB,IAIlD,YAAAS,SAAP,SAAgB3T,GACd,OAAsD,SAA/CjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAIjC,YAAAU,MAAP,SAAa5T,GACX,OAAOjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAIjC,YAAAW,MAAP,SAAa7T,GACX,OAAOjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAQjC,YAAAY,WAAP,SAAkB9T,GAChB,OAAsD,QAA/CjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAQjC,YAAAa,aAAP,SAAoB/T,GAClB,IAAMqB,EAAUtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAC/C,OAAc,QAAV7R,EACKtC,KAAKwU,UAAUvT,GAAOkC,WAAWnD,KAAKwU,UAAUvT,GAAOZ,OAAS,GAExD,QAAViC,GAIF,YAAAQ,WAAP,SAAkB7B,GAChB,OAAsD,QAA/CjB,KAAKyU,MAAMxT,EAAQkT,EAAY,IAIjC,YAAAc,UAAP,SAAiBhU,GACf,IAAMqB,EAAUtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAC/C,OAAc,QAAV7R,EACKtC,KAAKwU,UAAUvT,GAEV,QAAVqB,EACK,EAAAW,oBAA8B,QAAVX,GAGtB,IAOF,YAAA4S,SAAP,SAAgBjU,EAAe0Q,GAC7B,IAAMwD,EAAalU,EAAQkT,EAO3B,OANAxC,EAAKrP,QAAUtC,KAAKyU,MAAMU,EAAa,GACvCxD,EAAKpP,GAAKvC,KAAKyU,MAAMU,EAAa,GAClCxD,EAAKnP,GAAKxC,KAAKyU,MAAMU,EAAa,GACf,QAAfxD,EAAKrP,UACPqP,EAAKlP,aAAezC,KAAKwU,UAAUvT,IAE9B0Q,GAMF,YAAAgD,QAAP,SAAe1T,EAAe0Q,GACT,QAAfA,EAAKrP,UACPtC,KAAKwU,UAAUvT,GAAS0Q,EAAKlP,cAE/BzC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAgBxC,EAAKrP,QACpDtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAWxC,EAAKpP,GAC/CvC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAWxC,EAAKnP,IAQ1C,YAAA4S,qBAAP,SAA4BnU,EAAemE,EAAmBiL,EAAe9N,EAAYC,GACvFxC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAgB/O,EAAaiL,GAAS,GACrErQ,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAW5R,EAC1CvC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAW3R,GASrC,YAAA6S,mBAAP,SAA0BpU,EAAemE,GACvC,IAAI9C,EAAUtC,KAAKyU,MAAMxT,EAAQkT,EAAY,GAC/B,QAAV7R,EAEFtC,KAAKwU,UAAUvT,IAAU,EAAAgC,oBAAoBmC,IAE/B,QAAV9C,GAIFtC,KAAKwU,UAAUvT,GAAS,EAAAgC,oBAA8B,QAAVX,GAAoC,EAAAW,oBAAoBmC,GACpG9C,IAAW,QACXA,GAAW,SAIXA,EAAU8C,EAAa,GAAK,GAE9BpF,KAAKyU,MAAMxT,EAAQkT,EAAY,GAAgB7R,IAI5C,YAAAgT,YAAP,SAAmB1O,EAAa7H,EAAWuV,GAEzC,GADA1N,GAAO5G,KAAKK,OACRtB,EAAIiB,KAAKK,OAASuG,EAAK,CAEzB,IADA,IAAM+K,EAAO,IAAI,EAAA/O,SACR1F,EAAI8C,KAAKK,OAASuG,EAAM7H,EAAI,EAAG7B,GAAK,IAAKA,EAChD8C,KAAK2U,QAAQ/N,EAAM7H,EAAI7B,EAAG8C,KAAKkV,SAAStO,EAAM1J,EAAGyU,IAEnD,IAASzU,EAAI,EAAGA,EAAI6B,IAAK7B,EACvB8C,KAAK2U,QAAQ/N,EAAM1J,EAAGoX,QAGxB,IAASpX,EAAI0J,EAAK1J,EAAI8C,KAAKK,SAAUnD,EACnC8C,KAAK2U,QAAQzX,EAAGoX,IAKf,YAAAiB,YAAP,SAAmB3O,EAAa7H,EAAWuV,GAEzC,GADA1N,GAAO5G,KAAKK,OACRtB,EAAIiB,KAAKK,OAASuG,EAAK,CAEzB,IADA,IAAM+K,EAAO,IAAI,EAAA/O,SACR1F,EAAI,EAAGA,EAAI8C,KAAKK,OAASuG,EAAM7H,IAAK7B,EAC3C8C,KAAK2U,QAAQ/N,EAAM1J,EAAG8C,KAAKkV,SAAStO,EAAM7H,EAAI7B,EAAGyU,IAEnD,IAASzU,EAAI8C,KAAKK,OAAStB,EAAG7B,EAAI8C,KAAKK,SAAUnD,EAC/C8C,KAAK2U,QAAQzX,EAAGoX,QAGlB,IAASpX,EAAI0J,EAAK1J,EAAI8C,KAAKK,SAAUnD,EACnC8C,KAAK2U,QAAQzX,EAAGoX,IAKf,YAAAkB,aAAP,SAAoBjQ,EAAeC,EAAa8O,GAC9C,KAAO/O,EAAQC,GAAQD,EAAQvF,KAAKK,QAClCL,KAAK2U,QAAQpP,IAAS+O,IAInB,YAAAxE,OAAP,SAAc+C,EAAcyB,GAC1B,GAAIzB,IAAS7S,KAAKK,OAAlB,CAGA,GAAIwS,EAAO7S,KAAKK,OAAQ,CACtB,IAAMG,EAAO,IAAIkU,YAAY7B,EAAOsB,GAChCnU,KAAKK,SACHwS,EAAOsB,EAAYnU,KAAKyU,MAAMpU,OAChCG,EAAKsT,IAAI9T,KAAKyU,MAAMgB,SAAS,EAAG5C,EAAOsB,IAEvC3T,EAAKsT,IAAI9T,KAAKyU,QAGlBzU,KAAKyU,MAAQjU,EACb,IAAK,IAAItD,EAAI8C,KAAKK,OAAQnD,EAAI2V,IAAQ3V,EACpC8C,KAAK2U,QAAQzX,EAAGoX,QAGlB,GAAIzB,EAAM,EACFrS,EAAO,IAAIkU,YAAY7B,EAAOsB,IAC/BL,IAAI9T,KAAKyU,MAAMgB,SAAS,EAAG5C,EAAOsB,IACvCnU,KAAKyU,MAAQjU,EAEb,IAAMkV,EAAO1X,OAAO0X,KAAK1V,KAAKwU,WAC9B,IAAStX,EAAI,EAAGA,EAAIwY,EAAKrV,OAAQnD,IAAK,CACpC,IAAM2B,EAAM8W,SAASD,EAAKxY,GAAI,IAC1B2B,GAAOgU,UACF7S,KAAKwU,UAAU3V,SAI1BmB,KAAKyU,MAAQ,IAAIC,YAAY,GAC7B1U,KAAKwU,UAAY,GAGrBxU,KAAKK,OAASwS,IAIT,YAAAxM,KAAP,SAAYiO,GACVtU,KAAKwU,UAAY,GACjB,IAAK,IAAItX,EAAI,EAAGA,EAAI8C,KAAKK,SAAUnD,EACjC8C,KAAK2U,QAAQzX,EAAGoX,IAKb,YAAAsB,SAAP,SAAgBC,GASd,IAAK,IAAMnO,KARP1H,KAAKK,SAAWwV,EAAKxV,OACvBL,KAAKyU,MAAQ,IAAIC,YAAYmB,EAAKpB,OAGlCzU,KAAKyU,MAAMX,IAAI+B,EAAKpB,OAEtBzU,KAAKK,OAASwV,EAAKxV,OACnBL,KAAKwU,UAAY,GACAqB,EAAKrB,UACpBxU,KAAKwU,UAAU9M,GAAMmO,EAAKrB,UAAU9M,GAEtC1H,KAAKuU,UAAYsB,EAAKtB,WAIjB,YAAA5Q,MAAP,WACE,IAAMmS,EAAU,IAAIC,EAAW,GAG/B,IAAK,IAAMrO,KAFXoO,EAAQrB,MAAQ,IAAIC,YAAY1U,KAAKyU,OACrCqB,EAAQzV,OAASL,KAAKK,OACLL,KAAKwU,UACpBsB,EAAQtB,UAAU9M,GAAM1H,KAAKwU,UAAU9M,GAGzC,OADAoO,EAAQvB,UAAYvU,KAAKuU,UAClBuB,GAGF,YAAAE,iBAAP,WACE,IAAK,IAAI9Y,EAAI8C,KAAKK,OAAS,EAAGnD,GAAK,IAAKA,EACtC,GAAgD,QAA3C8C,KAAKyU,MAAMvX,EAAIiX,EAAY,GAC9B,OAAOjX,GAAK8C,KAAKyU,MAAMvX,EAAIiX,EAAY,IAAiB,IAG5D,OAAO,GAGF,YAAA8B,cAAP,SAAqBC,EAAiBC,EAAgBC,EAAiB/V,EAAgBgW,GACrF,IAAMC,EAAUJ,EAAIzB,MACpB,GAAI4B,EACF,IAAK,IAAI1E,EAAOtR,EAAS,EAAGsR,GAAQ,EAAGA,IACrC,IAAK,IAAIzU,EAAI,EAAGA,EAAIiX,EAAWjX,IAC7B8C,KAAKyU,OAAO2B,EAAUzE,GAAQwC,EAAYjX,GAAKoZ,GAASH,EAASxE,GAAQwC,EAAYjX,QAIzF,IAASyU,EAAO,EAAGA,EAAOtR,EAAQsR,IAChC,IAASzU,EAAI,EAAGA,EAAIiX,EAAWjX,IAC7B8C,KAAKyU,OAAO2B,EAAUzE,GAAQwC,EAAYjX,GAAKoZ,GAASH,EAASxE,GAAQwC,EAAYjX,GAM3F,IAAMqZ,EAAkBvY,OAAO0X,KAAKQ,EAAI1B,WACxC,IAAStX,EAAI,EAAGA,EAAIqZ,EAAgBlW,OAAQnD,IAAK,CAC/C,IAAM2B,EAAM8W,SAASY,EAAgBrZ,GAAI,IACrC2B,GAAOsX,IACTnW,KAAKwU,UAAU3V,EAAMsX,EAASC,GAAWF,EAAI1B,UAAU3V,MAKtD,YAAA2X,kBAAP,SAAyBC,EAA4BC,EAAsBC,QAAlD,IAAAF,OAAA,QAA4B,IAAAC,MAAA,QAAsB,IAAAC,MAAiB3W,KAAKK,QAC3FoW,IACFE,EAASC,KAAKC,IAAIF,EAAQ3W,KAAKgW,qBAGjC,IADA,IAAIvQ,EAAS,GACNiR,EAAWC,GAAQ,CACxB,IAAMrU,EAAUtC,KAAKyU,MAAMiC,EAAWvC,EAAY,GAC5CxN,EAAe,QAAVrE,EACXmD,GAAqB,QAAVnD,EAAsCtC,KAAKwU,UAAUkC,GAAY,EAAO,EAAAzT,oBAAoB0D,GAAM,EAAA9E,qBAC7G6U,GAAapU,GAAW,IAAwB,EAElD,OAAOmD,GAEX,EAlVA,GAAa,EAAAsQ,c,8ECjDF,EAAAe,YAAc,iBACd,EAAAC,cAAgB,kE,8ECMd,EAAAC,SAA+C,GAK/C,EAAAC,gBAAmC,EAAAD,SAAY,EAY5D,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,KAOP,EAAAA,SAAY,EAAI,KAOhB,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAS,KAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,M,8ECxPP,YAEa,EAAAE,QAAU,SAAUC,GAG/B,IAAMC,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n   triggerBinaryEvent(data: string): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { fromCss, toCss, blend, toRgba } from 'browser/Color';\n\nconst DEFAULT_FOREGROUND = fromCss('#ffffff');\nconst DEFAULT_BACKGROUND = fromCss('#000000');\nconst DEFAULT_CURSOR = fromCss('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromCss('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromCss('#2e3436'),\n    fromCss('#cc0000'),\n    fromCss('#4e9a06'),\n    fromCss('#c4a000'),\n    fromCss('#3465a4'),\n    fromCss('#75507b'),\n    fromCss('#06989a'),\n    fromCss('#d3d7cf'),\n    // bright:\n    fromCss('#555753'),\n    fromCss('#ef2929'),\n    fromCss('#8ae234'),\n    fromCss('#fce94f'),\n    fromCss('#729fcf'),\n    fromCss('#ad7fa8'),\n    fromCss('#34e2e2'),\n    fromCss('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: toCss(r, g, b),\n      rgba: toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: toCss(c, c, c),\n      rgba: toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement | null;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // misc\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._bufferService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this.linkifier = this.linkifier || new Linkifier(this._bufferService, this._logService);\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.warn('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      let pos;\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n                  ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                  ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: {[key: string]: ((ev: Event) => void) | null} = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: {[key: string]: (ev: Event) => void} = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n        (amount > 0 &&  scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n        (modifier === 'ctrl' && ev.ctrlKey) ||\n        (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    protected _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => this.setTitle(data)));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.reset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._terminal.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._terminal.originMode\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    if (this._terminal.originMode) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n        this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.originMode = false;\n    this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n    this._terminal.applicationKeypad = false; // ?\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n    this._coreService.decPrivateModes.applicationCursorKeys = false;\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._terminal.charset = null;\n    this._terminal.glevel = 0; // ??\n    this._terminal.charsets = [null]; // ??\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._terminal.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._terminal.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._terminal.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._terminal.curAttrData.fg;\n    cell.bg = this._terminal.curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, this._linkifier, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\nexport function blend(bg: IColor, fg: IColor): IColor {\n  const a = (fg.rgba & 0xFF) / 255;\n  if (a === 1) {\n    return {\n      css: fg.css,\n      rgba: fg.rgba\n    };\n  }\n  const fgR = (fg.rgba >> 24) & 0xFF;\n  const fgG = (fg.rgba >> 16) & 0xFF;\n  const fgB = (fg.rgba >> 8) & 0xFF;\n  const bgR = (bg.rgba >> 24) & 0xFF;\n  const bgG = (bg.rgba >> 16) & 0xFF;\n  const bgB = (bg.rgba >> 8) & 0xFF;\n  const r = bgR + Math.round((fgR - bgR) * a);\n  const g = bgG + Math.round((fgG - bgG) * a);\n  const b = bgB + Math.round((fgB - bgB) * a);\n  const css = toCss(r, g, b);\n  const rgba = toRgba(r, g, b);\n  return { css, rgba };\n}\n\nexport function fromCss(css: string): IColor {\n  return {\n    css,\n    rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n  };\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\nexport function toCss(r: number, g: number, b: number): string {\n  return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n}\n\nexport function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n  // >>> 0 forces an unsigned int\n  return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._optionsService.options.fontFamily};` +\n        ` font-size: ${this._optionsService.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._optionsService.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = this._bufferService.buffer.x;\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _document: Document,\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._optionsService.options.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\',:;\"'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      DOWN: !!(events & CoreMouseEventType.DOWN),\n      UP: !!(events & CoreMouseEventType.UP),\n      DRAG: !!(events & CoreMouseEventType.DRAG),\n      MOVE: !!(events & CoreMouseEventType.MOVE),\n      WHEEL: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}